<!DOCTYPE html>

<html lang="zh-tw">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <title>
        BrewPiless記錄設定
    </title>
    <script>
var JSVERSION = "3.5";

function s_ajax(b) {
    var c = new XMLHttpRequest();
    c.onreadystatechange = function() {
        if (c.readyState == 4) {
            if (c.status == 200) {
                b.success(c.responseText)
            } else {
                c.onerror(c.status)
            }
        }
    };
    c.ontimeout = function() {
        if (typeof b["timeout"] != "undefined") b.timeout();
        else c.onerror(-1)
    }, c.onerror = function(a) {
        if (typeof b["fail"] != "undefined") b.fail(a)
    };
    c.open(b.m, b.url, true);
    if (typeof b["data"] != "undefined") {
        c.setRequestHeader("Content-Type", (typeof b["mime"] != "undefined") ? b["mime"] : "application/x-www-form-urlencoded");
        c.send(b.data)
    } else c.send()
}

var Q = function(d) {
    return document.querySelector(d);
};

function C2F(c) {
    return Math.round((c * 1.8 + 32) * 10) / 10
}

function F2C(f) {
    return Math.round((f - 32) / 1.8 * 10) / 10
}

function openDlgLoading() {
    document.getElementById('dlg_loading').style.display = "block";
}

function closeDlgLoading() {
    document.getElementById('dlg_loading').style.display = "none";
}

var BrewMath = {
    abv: function(og, fg) {
        return ((76.08 * (og - fg) / (1.775 - og)) * (fg / 0.794)).toFixed(1);
    },
    abvP: function(og, fg) {
        return BrewMath.abv(BrewMath.pla2sg(og), BrewMath.pla2sg(fg));
    },
    att: function(og, fg) {
        return Math.round((og - fg) / (og - 1) * 100);
    },
    attP: function(pog, pfg) {
        return Math.round((pog - pfg) / pog * 100);
    },
    sg2pla: function(sg) {
        return (((182.4601 * sg - 775.6821) * sg + 1262.7794) * sg - 669.5622);
    },
    pla2sg: function(pla) {
        return 1 + (pla / (258.6 - ((pla / 258.2) * 227.1)));
    },
    tempCorrectionF(sg, t, c) {
        var nsg = sg * ((1.00130346 - 0.000134722124 * t + 0.00000204052596 * t * t - 0.00000000232820948 * t * t * t) /
            (1.00130346 - 0.000134722124 * c + 0.00000204052596 * c * c - 0.00000000232820948 * c * c * c));
        return nsg;
    },
    pTempCorrectionF(sg, t, c) {
        return BrewMath.sg2pla(BrewMath.tempCorrectionF(BrewMath.pla2sg(sg), t, c));
    },
    tempCorrection(celsius, sg, t, c) {
        return celsius ? BrewMath.tempCorrectionF(sg, C2F(t), C2F(c)) : BrewMath.tempCorrectionF(sg, t, c);
    },
    pTempCorrection(celsius, sg, t, c) {
        return celsius ? BrewMath.pTempCorrectionF(sg, C2F(t), C2F(c)) : BrewMath.tempCorrectionF(sg, t, c);
    }
};

Date.prototype.shortLocalizedString = function() {
    var y = this.getYear() + 1900;
    var re = new RegExp('[^\d]?' + y + '[^\d]?');
    var n = this.toLocaleDateString();
    var ds = n.replace(re, "");
    var HH = this.getHours();
    var MM = this.getMinutes();

    function T(x) {
        return (x > 9) ? x : ("0" + x);
    }
    return ds + " " + T(HH) + ":" + T(MM);
};

function getActiveNavItem() {
    var path = window.location.pathname.split("/").pop();
    if (path == "") path = "index.htm";
    var element = Q('.options>li>a[href="/' + path + '"]');
    element.className += 'active';
}

function formatDate(dt) {
    //	var y = dt.getFullYear();
    //	var M = dt.getMonth() +1;
    //	var d = dt.getDate();
    var h = dt.getHours();
    var m = dt.getMinutes();
    //    var s = dt.getSeconds();
    function dd(n) {
        return (n < 10) ? '0' + n : n;
    }
    //	return dd(M) + "/" + dd(d) + "/" + y +" "+ dd(h) +":"+dd(m)+":"+dd(s);
    //	return dd(M) + "/" + dd(d) +" "+ dd(h) +":"+dd(m);
    return dt.toLocaleDateString() + " " + dd(h) + ":" + dd(m);
}

function formatDateForPicker(date) {
    var h = date.getHours();
    var m = date.getMinutes();

    function dd(n) { return (n < 10) ? '0' + n : n; }
    return date.getFullYear() + "-" + dd(date.getMonth() + 1) + "-" + dd(date.getDate()) + "T" + dd(h) + ":" + dd(m);
}
</script>
    <script>
var logurl = "log";

Number.prototype.format = function(n, x, s, c) {
    var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')',
        num = this.toFixed(Math.max(0, ~~n));

    return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
};
String.prototype.escapeJSON = function() {
    return this.replace(/[\\]/g, '\\\\')
        .replace(/[\"]/g, '\\\"')
        .replace(/[\/]/g, '\\/')
        .replace(/[\b]/g, '\\b')
        .replace(/[\f]/g, '\\f')
        .replace(/[\n]/g, '\\n')
        .replace(/[\r]/g, '\\r')
        .replace(/[\t]/g, '\\t');
};


var logs = {
    url: "loglist.php",
    rmurl: "loglist.php?rm=",
    starturl: "loglist.php?start=",
    stopurl: "loglist.php?stop=1",
    dlurl: "loglist.php?dl=",
    ll: [],
    fs: {},
    logging: false,
    vname: function(name) {
        if (name == "") return false;
        if (name.match(/[\W]/g)) return false;
        return true;
    },
    dupname: function(name) {
        var ret = false;
        this.ll.forEach(function(log) {
            if (name == log.name) ret = true;
        });
        return ret;
    },
    fsinfo: function(s, u) {
        Q("#fssize").innerHTML = s.format(0, 3, ',');
        Q("#fsused").innerHTML = u.format(0, 3, ',');
        Q("#fsfree").innerHTML = (s - u).format(0, 3, ',');
    },
    stoplog: function() {
        var t = this;
        if (t.logging) {
            // stop
            if (confirm("停止記錄?")) {
                //console.log("Stop logging");
                var n = Q("#logname").value.trim();
                s_ajax({
                    url: t.stopurl + n,
                    m: "GET",
                    success: function(d) {
                        location.reload();
                    },
                    fail: function(d) {
                        alert("停止記錄失敗:" + d);
                    }
                });
            }
        }
    },
    startlog: function() {
        var t = this;
        if (!t.logging) {
            if (t.ll.length >= 10) {
                alert("記錄檔己經太多，請先刪除舊檔。");
                return;
            }
            if ((t.fs.size - t.fs.used) <= t.fs.block * 2) {
                alert("儲存空間不足!");
                return;
            }
            var name = Q("#logname").value.trim();
            if (t.vname(name) === false) {
                alert("檔名不能使用，請勿使用特殊字完。");
                return;
            }
            if (t.dupname(name)) {
                alert("記錄檔名重複。");
                return;
            }
            var arg = "";
            var calispindel = Q("#calispindel").checked;
            if (calispindel) {
                var tilt = parseFloat(Q("#tiltinw").value.trim());
                var reading = parseFloat(Q("#hydrometer").value.trim());
                if (window.plato) reading = 0;
                if (isNaN(tilt)) {
                    alert("tilt值是必需的。");
                } else if (!window.plato && (isNaN(tilt) || isNaN(reading))) {
                    alert("tilt值及比重讀數是必需的。");
                    return;
                }
                arg = "&tw=" + tilt + "&hr=" + reading;
            }

            if (confirm("開始新記錄?")) {
                //console.log("Start logging");
                s_ajax({
                    url: t.starturl + name + arg,
                    m: "GET",
                    success: function(d) {
                        location.reload();
                    },
                    fail: function(d) {
                        alert("無法開始記錄:" + d);
                    }
                });
            }
        }
    },
    recording: function(n, t) {
        this.logging = true;
        var d = new Date(t * 1000);
        Q("#start-log-date").innerHTML = d.toLocaleString();
        Q("#loggingtitle").innerHTML = n;
        Q("#logstartinput").style.display = "none";
        Q("#logstopinput").style.display = "block";
    },
    stop: function() {
        this.logging = false;
        Q("#logstartinput").style.display = "block";
        Q("#logstopinput").style.display = "none";
    },
    //view:function(n){
    //	alert("View " + this.ll[n].name);
    //	window.open(this.vurl+ n);
    //},
    rm: function(n) {
        var t = this;
        if (confirm("刪除記錄 " + t.ll[n].name)) {
            console.log("rm " + t.ll[n].name);
            s_ajax({
                url: t.rmurl + n,
                m: "GET",
                success: function(d) {
                    var r = JSON.parse(d);
                    t.fs = r;
                    t.fsinfo(r.size, r.used);
                    t.ll.splice(n, 1);
                    t.list(t.ll);
                },
                fail: function(d) {
                    alert("無法刪除:" + d);
                }
            });
        }
    },
    dl: function(n) {
        //console.log("DL " +this.ll[n].name);
        window.open(this.dlurl + n);
    },
    list: function(l) {
        var tb = Q("#loglist").querySelector("tbody");
        var tr;
        while (tr = tb.querySelector("tr:nth-of-type(2)"))
            tb.removeChild(tr);

        var t = this;
        var row = t.row;
        l.forEach(function(i, idx) {
            var name = i.name;
            var date = new Date(i.time * 1000);
            var nr = row.cloneNode(true);
            nr.querySelector(".logid").innerHTML = name;
            nr.querySelector(".logdate").innerHTML = date.toLocaleString();
            nr.querySelector(".dlbutton").onclick = function() {
                t.dl(idx);
            };
            //		nr.querySelector(".viewbutton").onclick=function(){t.view(idx);};
            nr.querySelector(".rmbutton").onclick = function() {
                t.rm(idx);
            };
            tb.appendChild(nr);
        });

    },
    init: function() {
        var t = this;
        Q("#startlogbutton").onclick = function() {
            t.startlog();
        };
        Q("#stoplogbutton").onclick = function() {
            t.stoplog();
        };

        t.row = Q("#loglist").querySelector("tr:nth-of-type(2)");
        t.row.parentNode.removeChild(t.row);
        s_ajax({
            url: t.url,
            m: "GET",
            success: function(d) {
                var r = JSON.parse(d);
                t.fs = r.fs;
                if (r.rec)
                    t.recording(r.log, r.start);
                t.ll = r.list;
                t.list(r.list);
                t.fsinfo(r.fs.size, r.fs.used);
                if (typeof r["plato"] != "undefined" && r.plato) {
                    window.plato = true;
                    var th = document.querySelectorAll(".tiltwatercorrect");
                    for (var i = 0; i < th.length; i++)
                        th[i].style.display = "none";
                } else window.plato = false;
            },
            fail: function(e) {
                alert("失敗:" + e);
            }
        });
    },
};
// for remote logging
function checkurl(t) {
    if (t.value.trim().startsWith("https")) {
        alert("不支援HTTPS!");
    }
}

function checkformat(ta) {
    if (ta.value.length > 256) {
        ta.value = t.value.substring(0, 256);
    }
    Q("#fmthint").innerHTML = "" + ta.value.length + "/256";
}

function cmethod(c) {
    var inputs = document.querySelectorAll('input[name$="method"]');
    for (var i = 0; i < inputs.length; i++) {
        if (inputs[i].id != c.id)
            inputs[i].checked = false;
    }
    window.selectedMethod = c.value;
}

//Serivce specif widget processing
// generic http
function generichttp_get() {
    if (typeof window.selectedMethod == "undefined") {
        alert("請選擇Method!");
        return null;
    }
    var format = Q("#format").value.trim();

    if (window.selectedMethod == "GET") {
        var myRe = new RegExp("\s", "g");
        if (myRe.exec(format)) {
            alert("不可使用空白字元");
            return null;
        }
    }

    var r = {};
    r.url = Q("#url").value.trim();
    r.format = encodeURIComponent(format.escapeJSON());
    r.method = (Q("#m_post").checked) ? "POST" : "GET";
    r.type = Q("#data-type").value.trim();
    r.service = 0;
    return r;
}

function generichttp_set(r) {
    Q("#service-type").value = "generichttp";
    serviceOption("generichttp");
    window.selectedMethod = r.method;
    Q("#m_" + r.method.toLowerCase()).checked = true;
    Q("#url").value = (r.url === undefined) ? "" : r.url;
    Q("#data-type").value = (r.type === undefined) ? "" : r.type;
    Q("#format").value = (r.format === undefined) ? "" : r.format;
    checkformat(Q("#format"));
}
// ubidots.com
function ubidots_set(r) {
    Q("#service-type").value = "ubidots";
    serviceOption("ubidots");

    // different api    
    var match = /http:\/\/([\w\.]+)\.ubidots\.com\/api\/v1\.6\/devices\/(\w+)\/\?token=(\w+)$/.exec(r.url);

    Q("select[name=ubidots-account]").value = (match[1] == "things") ? 1 : 2;
    Q("#ubidots-device").value = match[2];
    Q("#ubidots-token").value = match[3];

}

function ubidots_get() {
    var device = Q("#ubidots-device").value.trim();
    if (!device) return null;
    var token = Q("#ubidots-token").value.trim();
    if (!token) return null;
    var info = {};
    info.url = (Q("select[name=ubidots-account]").value == 1) ?
        "http://things.ubidots.com/api/v1.6/devices/" + device + "/?token=" + token :
        "http://industrial.api.ubidots.com/v1.6/devices/" + device + "/?token=" + token;

    info.format = encodeURIComponent("{}".escapeJSON());
    info.method = "POST";
    info.type = "application/json";
    info.service = 1;
    return info;
}
// thingspeak.com
function thingspeak_set(r) {
    Q("#service-type").value = "thingspeak";
    serviceOption("thingspeak");

    var values = {};
    var fields = r.format.split('&');
    for (var i = 0; i < fields.length; i++) {
        var pair = fields[i].split("=");
        values[pair[0]] = pair[1];
    }

    Q("#thingspeak-apikey").value = values["api_key"];

    for (var i = 1; i < 9; i++)
        Q("select[name=thingspeak-f" + i + "]").value = (typeof values["field" + i] == "undefined") ?
        "unused" : values["field" + i].substring(1);
}

function thingspeak_get() {
    var apikey = Q("#thingspeak-apikey").value.trim();
    if (!apikey) return null;
    apikey = "api_key=" + apikey;
    var format = apikey;
    for (var i = 1; i < 9; i++) {
        var v = Q("select[name=thingspeak-f" + i + "]").value;
        if (v != "unused") format = format + "&field" + i + "=%" + v;
    }
    if (format == apikey) return null;

    var info = {};
    info.url = "http://api.thingspeak.com/update";
    info.format = encodeURIComponent(format.escapeJSON());;
    info.method = "POST";
    info.type = "application/x-www-form-urlencoded";
    info.service = 0;
    return info;
}
//brewfahter
function brewfather_set(r) {
    Q("#service-type").value = "brewfather";
    serviceOption("brewfather");

    var match = /http:\/\/log\.brewfather\.net\/brewpiless\?id=(\w+)$/.exec(r.url);
    Q("#brewfather-id").value = match[1];
    var idmatch = /"id":"([^"]+)"/.exec(r.format);
    Q("#brewfather-device").value = idmatch[1];
}

function brewfather_get(r) {
    var uid = Q("#brewfather-id").value.trim();
    var device = Q("#brewfather-device").value.trim();
    if (!uid || !device) return null;

    var info = {};
    info.url = "http://log.brewfather.net/brewpiless?id=" + uid;

    var format = "{\"id\":\"" + device +
        "\",\"beerTemp\":%b,\"beerSet\":%B,\"fridgeTemp\":%f,\"fridgeSet\":%F,\"roomTemp\":%r,\"gravity\":%g,\"tiltValue\":%t,\"auxTemp\":%a,\"extVolt\":%v,\"timestamp\":%u,\"tempUnit\":\"%U\",\"pressure\":%P,\"mode\":\"%M\"}";

    info.format = encodeURIComponent(format.escapeJSON());;

    info.method = "POST";
    info.type = "application/json";
    info.service = 0;
    return info;
}

//brewfahter
function brewersfriend_set(r) {
    Q("#service-type").value = "brewersfriend";
    serviceOption("brewersfriend");

    Q("#brewersfriend-url").value=r.url;

    var beermatch = /"beer":"([^"]+)"/.exec(r.format);
    Q("#brewersfriend-beer").value=beermatch[1];

    var gumatch = /"gravity_unit":"([P|G])"/.exec(r.format);
    if(gumatch[1] == "P"){
        Q("#gu-sg").checked = false;
        Q("#gu-plato").checked=true;
    }else{
        Q("#gu-sg").checked = true;
        Q("#gu-plato").checked=false;
    }
}

function brewersfriend_get(r) {
    var gf="%g";
    var gu="G";
    if(Q('input[name="BF-gu"]:checked').value == "gu-plato"){
        var gf="%p";
        var gu="P";
    }
    //http://log.brewersfriend.com/stream/[API KEY]
    var url =Q("#brewersfriend-url").value.trim();
    var beer=Q("#brewersfriend-beer").value.trim();

    var format ="{\"name\":\"BrewPiLess\",\"temp\": %b,\"temp_unit\": \"%U\",\"gravity\":" + gf 
        +",\"gravity_unit\":\"" + gu + "\",\"ph\": \"\",\"comment\": \"\",\"beer\":\"" + beer +"\",\"battery\":%v,\"RSSI\": \"\",\"angle\": %t}";

    var info = {};
    info.url =url;
    
    info.format = encodeURIComponent(format.escapeJSON());;

    info.method = "POST";
    info.type = "application/json";
    info.service = 2; // null string instead of null
    return info;
}
//
function service_set(r) {
    if (r.service == 1) { // ubidots.com 
        ubidots_set(r);
    } else {
        if (/http:\/\/api\.thingspeak\.com\//.exec(r.url))
            thingspeak_set(r);
        else if (/http:\/\/log\.brewfather\.net\//.exec(r.url))
            brewfather_set(r); 
        else if (/http:\/\/log\.brewersfriend\.com\//.exec(r.url))
            brewersfriend_set(r);
        else
            generichttp_set(r);
    }
}

function update() {
    var service = Q("#service-type").value;
    var r;
    var enabled = Q("#enabled").checked;
    if (service == "generichttp") r = generichttp_get();
    else if (service == "ubidots") r = ubidots_get();
    else if (service == "thingspeak") r = thingspeak_get();
    else if (service == "brewfather") r = brewfather_get();
    else if (service == "brewersfriend") r= brewersfriend_get();

    if (enabled && !r) return;
    if (!r) {
        // default
        r = { url: "", format: "", method: "POST", type: "", service: 0 };
    }
    r.enabled = enabled;
    r.period = Q("#period").value;

    s_ajax({
        url: logurl,
        m: "POST",
        data: "data=" + JSON.stringify(r),
        success: function(d) {
            alert("完成");
        },
        fail: function(e) {
            alert("失敗:" + e);
        }
    });

}

function remote_init(classic) {
    var MinPeriod = { generichttp: 1, thingspeak: 15, brewfather: 900, ubidots: 1 };
    Q("#period").onchange = function() {
        var min = MinPeriod[Q("#service-type").value];
        if (Q("#period").value < min) Q("#period").value = min;
    };

    serviceOption("generichttp");

    s_ajax({
        url: logurl + "?data=1",
        m: "GET",
        success: function(d) {
                var r = JSON.parse(d);
                if (typeof r.enabled == "undefined") return;
                Q("#enabled").checked = r.enabled;
                Q("#period").value = (r.period === undefined) ? 300 : r.period;
                service_set(r);
            }
            /*,
                fail:function(d){
                        alert("error :"+d);
                  }*/
    });
}

function showformat(lab) {
    var f = Q("#formatlist");
    var rec = lab.getBoundingClientRect();
    f.style.display = "block";
    f.style.left = (rec.right + 5) + "px";
    f.style.top = (rec.bottom + 5) + "px";
}

function hideformat() {
    Q("#formatlist").style.display = "none";
}

function serviceOption(opt) {
    var divs = document.querySelectorAll("#service-opt > div");
    for (var i = 0; i < divs.length; i++) {
        var div = divs[i];
        if (div.id == opt) div.style.display = "block";
        else div.style.display = "none";
    }
    Q("#period").onchange();
}

function serviceChange() {
    serviceOption(Q("#service-type").value);
}

function init(classic) {
    if (typeof classic == "undefined") classic = false;
    if (!classic) {
        getActiveNavItem();
        Q("#verinfo").innerHTML = "v" + JSVERSION;
    }

    function readingByTemp() {
        var temp = parseFloat(Q("#watertemp").value);
        var ctemp = parseFloat(Q("#caltemp").value);
        var unit = Q("#tempunit").value;
        if (isNaN(temp) || isNaN(ctemp)) return;
        if (unit == 'C') {
            ctemp = C2F(ctemp);
            temp = C2F(temp);
        }
        var reading = BrewMath.tempCorrectionF(1.0, ctemp, temp);
        Q("#hydrometer").value = reading.toFixed(3);
    }
    Q("#watertemp").onchange = readingByTemp;
    Q("#caltemp").onchange = readingByTemp;
    Q("#tempunit").onchange = readingByTemp;

    remote_init(classic);
    logs.init();
}
</script>

    <style>
        #loglist td,
        #loglist tr,
        #loglist th,
        #loglist {
            border: 1px solid black;
        }
        
        fieldset {
            margin: 10px;
        }
        
        #fsinfo {
            margin: 10px;
        }
        
        #formatlist {
            display: none;
            position: absolute;
            border: 1px solid white;
            background: lightgray;
        }
        
        #formatlist table,
        #formatlist td,
        #formatlist th {
            border: 1px solid black;
            border-collapse: collapse;
        }
        
        ul.inputlist {
            list-style-type: none;
        }
        
        ul.inputlist li {
            display: table-row;
        }
        
        ul.inputlist .itemtitle {
            display: table-cell;
            font-weight: bold;
        }
        
        ul.inputlist .iteminput {
            display: table-cell;
        }
        
        .listgrid {
            margin: 4px;
        }
    </style>
</head>

<body onload="init(true);">
    <fieldset>
        <legend>
            雲端記錄
        </legend>
        <form>
            <ul class="inputlist">
                <li>
                    <span class="itemtitle">啓用:</span>
                    <span class="itemvalue"> <input type="checkbox" id="enabled" value="yes"></span>
                </li>
                <li>
                    <span class="itemtitle">記錄時間間隔:</span>
                    <span class="itemvalue"><input type="text" id="period" size="4">
                    秒
                        </span>
                </li>
                <li>
                    <span class="itemtitle">Service Type:</span>
                    <span class="itemvalue">
                        <select id="service-type" name="service" onchange="serviceChange()">
                        <option value="generichttp"> Generic HTTP </option>
                        <option value="thingspeak"> thingspeak.com </option>
                        <option value="ubidots"> ubidots.com </option>
                        <option value="brewfather"> Brewfather </option>
                        <option value="brewersfriend"> Brewer'sFriend </option>
                        </select>
                    </span>
                </li>

            </ul>
            <div id="service-opt">

                <div id="brewersfriend" class="service-options">
                    <ul class="inputlist">
                        <li>
                            <span class="itemtitle">Stream URL:</span>
                            <span class="itemvalue"><input type="text" id="brewersfriend-url" size="42"></span>
                        </li>
                        <li>
                                <span class="itemtitle">
                                Beer:
                                </span>
                                <span class="itemvalue"><input type="text" id="brewersfriend-beer" size="42"></span>
                        </li>

                        <li>
                            <span class="itemtitle">
                                Gravity Unit
                            </span>
                            <span class="itemvalue">
                            <span class="md-radio md-radio-inline">
                                <input id="gu-sg" type="radio" name="BF-gu" value="gu-sg" checked="checked">
                                <label for="gu-sg">SG(1.x)</label>
                            </span>
                            <span class="md-radio md-radio-inline">
                                <input id="gu-plato" type="radio" name="BF-gu" value="gu-plato">
                                <label for="gu-plato">Plato(&deg;P)</label>
                            </span>
                            </span>
                        </li>
                    </ul>
                </div>


                <div id="thingspeak">
                    <ul class="inputlist">
                        <li><span class="itemtitle">Write API Key:</span>
                            <span class="itemvalue"><input type="text" id="thingspeak-apikey" size="42"></span>
                        </li>
                        <li><span class="itemtitle">Fields:</span>
                            <span class="itemvalue">

                                <span class="listgrid">
                                <label for="thingspeak-f1">Field 1:</label>
                                <select name="thingspeak-f1">
                                <option value="unused"> Unused </option>
                                <option value="b"> 啤酒溫度 </option>
                                <option value="B"> 啤酒設定溫度 </option>
                                <option value="f"> 冰箱溫度 </option>
                                <option value="F"> 冰箱設定溫度 </option>
                                <option value="r"> 室溫 </option>
                                <option value="g"> 比重 </option>
                                <option value="p"> Plato </option>
                                <option value="a"> iSpindel溫度 </option>
                                <option value="v"> iSpindel電壓 </option>
                                <option value="t"> Tilt值 </option>
                                <option value="P"> Pressure in PSI</option>
                                <option value="m"> mode in integer</option>

                            </select>
                                </span>
                            <span class="listgrid">
                                        <label for="thingspeak-f2">Field 2:</label>
                                        <select name="thingspeak-f2">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>

                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>
                        </select>
                                </span>

                            <span class="listgrid">
                                        <label for="thingspeak-f3">Field 3:</label>
                                        <select name="thingspeak-f3">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>

                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>
                        </select>
                                </span>
                            <br>
                            <span class="listgrid">
                                        <label for="thingspeak-f4">Field 4:</label>
                                        <select name="thingspeak-f4">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>
                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>

                                    </select>
                                </span>

                            <span class="listgrid">
                                        <label for="thingspeak-f5">Field 5:</label>
                                        <select name="thingspeak-f5">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>
                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>

                                    </select>
                                </span>

                            <span class="listgrid">
                                        <label for="thingspeak-f6">Field 6:</label>
                                        <select name="thingspeak-f6">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>
                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>

                                    </select>
                                </span>
                            <br>
                            <span class="listgrid">
                                        <label for="thingspeak-f7">Field 7:</label>
                                        <select name="thingspeak-f7">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>
                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>

                                    </select>
                                </span>
                            <span class="listgrid">
                                        <label for="thingspeak-f8">Field 8:</label>
                                        <select name="thingspeak-f8">
                                        <option value="unused"> Unused </option>
                                        <option value="b"> 啤酒溫度 </option>
                                        <option value="B"> 啤酒設定溫度 </option>
                                        <option value="f"> 冰箱溫度 </option>
                                        <option value="F"> 冰箱設定溫度 </option>
                                        <option value="r"> 室溫 </option>
                                        <option value="g"> 比重 </option>
                                        <option value="p"> Plato </option>
                                        <option value="a"> iSpindel溫度 </option>
                                        <option value="v"> iSpindel電壓 </option>
                                        <option value="t"> Tilt值 </option>
                                        <option value="P"> Pressure in PSI</option>
                                        <option value="m"> mode in integer</option>

                                    </select>
                                        </span>

                            </span>
                        </li>
                    </ul>
                </div>

                <div id="brewfather">
                    <ul class="inputlist">
                        <li><span class="itemtitle">ID:</span>
                            <span class="itemvalue"><input type="text" id="brewfather-id" size="42"></span>
                        </li>
                        <li><span class="itemtitle">Device Label:</span>
                            <span class="itemvalue"><input type="text" id="brewfather-device" size="42"></span>
                        </li>
                    </ul>
                </div>

                <div id="ubidots">
                    <ul class="inputlist">
                        <li><span class="itemtitle">Account:</span>
                            <span class="itemvalue"><select name="ubidots-account" class="nb">
                                                <option value="1">Educational</option>
                                                <option value="2">Industrial></option>
                                            </select>
                            </span>
                        </li>

                        <li><span class="itemtitle">Token:</span>
                            <span class="itemvalue"><input type="text" id="ubidots-token" size="42"></span>
                        </li>
                        <li><span class="itemtitle">Device:</span>
                            <span class="itemvalue"><input type="text" id="ubidots-device" size="42"></span>
                        </li>
                    </ul>
                </div>
                <div id="generichttp">
                    <ul class="inputlist">
                        <li>
                            <span class="itemtitle">Method:</span>
                            <span class="itemvalue">
                            <input type="checkbox" id="m_get" name="method" value="GET" onchange="cmethod(this);">Get
                            <input type="checkbox" id="m_post" name="method" value="POST" onchange="cmethod(this);">Post
                            <input type="checkbox" id="m_put" name="method" value="PUT" onchange="cmethod(this);">Put</span>
                        </li>
                        <li>
                            <span class="itemtitle">URL:</span>
                            <span class="itemvalue"><input type="text" id="url" size="128" placeholder="input link " onchange="checkurl(this);"></span>
                        </li>
                        <li>
                            <span class="itemtitle">DataType:</span>
                            <span class="itemvalue"><input type="text" id="data-type" size="42" placeholder="Content-Type"></span>
                        </li>
                        <li>
                            <span class="itemtitle"></span>
                            <span class="itemvalue" onmouseover="showformat(this);" onmouseout="hideformat()"><u>符號...</u></span>
                        </li>
                        <li>
                            <span class="itemtitle">格式:</span>
                            <span class="itemvalue"><textarea id="format" rows="4" cols="64" oninput="checkformat(this)"></textarea></span>
                        </li>
                        <li>
                            <span class="itemtitle"></span>
                            <span class="itemvalue">字元數:<span id="fmthint"></span></span>
                        </li>
                    </ul>
                </div>
            </div>
            <br>
            <button type="button" onclick="update();">更新變更</button>
        </form>
    </fieldset>
    <fieldset>
        <legend>
            本地記錄
        </legend>
        <div id="logctrl" style="border-style:outset;padding:16px">
            <div id="logstartinput">
                <span id="logtitle">新記錄檔名:</span>
                <input type="text" id="logname" size="24" maxlength="24">
                <button id="startlogbutton">開始記錄</button>
                <div style="margin-left:16px">
                    <strong> 選項:</strong><br>
                    校正iSpindel <input type="checkbox" id="calispindel">
                        <br>
                        在水中的Tilt值
                            <input type="text" id="tiltinw" size="6">
                            <span class="tiltwatercorrect">
                                比重計讀數:
                                    <input type="text" id="hydrometer" size="6">
                                    , 或是水溫 @ <input type="text" id="watertemp" size="4">&deg;
                                        比重計修正溫度 <input type="text" id="caltemp" size="4">&deg;
                                            <select id="tempunit"><option vlue="C">C</option><option value="F">F</option></select>
                            </span>
                </div>
            </div>
            <div id="logstopinput" style="display:none">
                <strong id="loggingtitle"></strong>
                記錄開始於 <strong id="start-log-date"></strong>
                    <button id="stoplogbutton">停止記錄</button>
            </div>
        </div>
        <div id="fsinfo">
            可使用空間: <span id="fsfree">0</span> Bytes,
                已使用空間: <span id="fsused">0</span> Bytes,
                    全部空間: <span id="fssize">0</span> Bytes
        </div>
        <table id="loglist">
            <tr>
                <th style="width:30%;">
                    記錄
                </th>
                <th style="width:40%;">
                    日期
                </th>
                <th>
                    動作
                </th>
            </tr>
            <tr>
                <td class="logid"></td>
                <td class="logdate"></td>
                <td><button class="dlbutton">下載</button><button class="rmbutton">刪除</button></td>
            </tr>
        </table>
    </fieldset>
    <div id="formatlist">
        <table>
            <tr>
                <th>%b</th>
                <td>
                    啤酒溫度
                </td>
            </tr>
            <tr>
                <th>%B</th>
                <td>
                    啤酒設定溫度
                </td>
            </tr>
            <tr>
                <th>%f</th>
                <td>
                    冰箱溫度
                </td>
            </tr>
            <tr>
                <th>%F</th>
                <td>
                    冰箱設定溫度
                </td>
            </tr>
            <tr>
                <th>%r</th>
                <td>
                    室溫
                </td>
            </tr>
            <tr>
                <th>%g</th>
                <td>
                    比重
                </td>
            </tr>
            <tr>
                <th>%p</th>
                <td>
                    Plato
                </td>
            </tr>
            <tr>
                <th>%a</th>
                <td>
                    iSpindel溫度
                </td>
            </tr>
            <tr>
                <th>%v</th>
                <td>
                    iSpindel電壓
                </td>
            </tr>
            <tr>
                <th>%t</th>
                <td>
                    Tilt值
                </td>
            </tr>
            <tr>
                <th>%u</th>
                <td>
                    最後一次回報比重的時間
                </td>
            </tr>

            <tr>
                <th>%U</th>
                <td>
                    Temperature in C or F
                </td>
            </tr>

            <tr>
                <th>%m</th>
                <td>
                    mode in integer
                </td>
            </tr>

            <tr>
                <th>%M</th>
                <td>
                    mode in character
                </td>
            </tr>

            <tr>
                <th>%P</th>
                <td>
                    Pressure in PSI
                </td>
            </tr>

        </table>
    </div>
</body>

</html>