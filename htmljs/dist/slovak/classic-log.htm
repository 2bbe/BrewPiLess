<!DOCTYPE html><html lang="sk"><head><meta http-equiv=content-type content="text/html; charset=utf-8"><title> BrewPiless Logging Setting </title><script>var JSVERSION = "3.4";

function s_ajax(b) {
    var c = new XMLHttpRequest();
    c.onreadystatechange = function() {
        if (c.readyState == 4) {
            if (c.status == 200) {
                b.success(c.responseText)
            } else {
                c.onerror(c.status)
            }
        }
    };
    c.ontimeout = function() {
        if (typeof b["timeout"] != "undefined") b.timeout();
        else c.onerror(-1)
    }, c.onerror = function(a) {
        if (typeof b["fail"] != "undefined") b.fail(a)
    };
    c.open(b.m, b.url, true);
    if (typeof b["data"] != "undefined") {
        c.setRequestHeader("Content-Type", (typeof b["mime"] != "undefined") ? b["mime"] : "application/x-www-form-urlencoded");
        c.send(b.data)
    } else c.send()
}

var Q = function(d) {
    return document.querySelector(d);
};

function C2F(c) {
    return Math.round((c * 1.8 + 32) * 10) / 10
}

function F2C(f) {
    return Math.round((f - 32) / 1.8 * 10) / 10
}

function openDlgLoading() {
    document.getElementById('dlg_loading').style.display = "block";
}

function closeDlgLoading() {
    document.getElementById('dlg_loading').style.display = "none";
}

var BrewMath = {
    abv: function(og, fg) {
        return ((76.08 * (og - fg) / (1.775 - og)) * (fg / 0.794)).toFixed(1);
    },
    abvP: function(og, fg) {
        return BrewMath.abv(BrewMath.pla2sg(og), BrewMath.pla2sg(fg));
    },
    att: function(og, fg) {
        return Math.round((og - fg) / (og - 1) * 100);
    },
    attP: function(pog, pfg) {
        return Math.round((pog - pfg) / pog * 100);
    },
    sg2pla: function(sg) {
        return (((182.4601 * sg - 775.6821) * sg + 1262.7794) * sg - 669.5622);
    },
    pla2sg: function(pla) {
        return 1 + (pla / (258.6 - ((pla / 258.2) * 227.1)));
    },
    tempCorrectionF(sg, t, c) {
        var nsg = sg * ((1.00130346 - 0.000134722124 * t + 0.00000204052596 * t * t - 0.00000000232820948 * t * t * t) /
            (1.00130346 - 0.000134722124 * c + 0.00000204052596 * c * c - 0.00000000232820948 * c * c * c));
        return nsg;
    },
    pTempCorrectionF(sg, t, c) {
        return BrewMath.sg2pla(BrewMath.tempCorrectionF(BrewMath.pla2sg(sg), t, c));
    },
    tempCorrection(celsius, sg, t, c) {
        return celsius ? BrewMath.tempCorrectionF(sg, C2F(t), C2F(c)) : BrewMath.tempCorrectionF(sg, t, c);
    },
    pTempCorrection(celsius, sg, t, c) {
        return celsius ? BrewMath.pTempCorrectionF(sg, C2F(t), C2F(c)) : BrewMath.tempCorrectionF(sg, t, c);
    }
};

Date.prototype.shortLocalizedString = function() {
    var y = this.getYear() + 1900;
    var re = new RegExp('[^\d]?' + y + '[^\d]?');
    var n = this.toLocaleDateString();
    var ds = n.replace(re, "");
    var HH = this.getHours();
    var MM = this.getMinutes();

    function T(x) {
        return (x > 9) ? x : ("0" + x);
    }
    return ds + " " + T(HH) + ":" + T(MM);
};

function getActiveNavItem() {
    var path = window.location.pathname.split("/").pop();
    if (path == "") path = "index.htm";
    var element = Q('.options>li>a[href="/' + path + '"]');
    element.className += 'active';
}

function formatDate(dt) {
    //	var y = dt.getFullYear();
    //	var M = dt.getMonth() +1;
    //	var d = dt.getDate();
    var h = dt.getHours();
    var m = dt.getMinutes();
    //    var s = dt.getSeconds();
    function dd(n) {
        return (n < 10) ? '0' + n : n;
    }
    //	return dd(M) + "/" + dd(d) + "/" + y +" "+ dd(h) +":"+dd(m)+":"+dd(s);
    //	return dd(M) + "/" + dd(d) +" "+ dd(h) +":"+dd(m);
    return dt.toLocaleDateString() + " " + dd(h) + ":" + dd(m);
}

function formatDateForPicker(date) {
    var h = date.getHours();
    var m = date.getMinutes();

    function dd(n) { return (n < 10) ? '0' + n : n; }
    return date.getFullYear() + "-" + dd(date.getMonth() + 1) + "-" + dd(date.getDate()) + "T" + dd(h) + ":" + dd(m);
}</script><script>var logurl="log";Number.prototype.format=function(e,t,i,r){var o="\\d(?=(\\d{"+(t||3)+"})+"+(0<e?"\\D":"$")+")",n=this.toFixed(Math.max(0,~~e));return(r?n.replace(".",r):n).replace(new RegExp(o,"g"),"$&"+(i||","))};var logs={url:"loglist.php",rmurl:"loglist.php?rm=",starturl:"loglist.php?start=",stopurl:"loglist.php?stop=1",dlurl:"loglist.php?dl=",ll:[],fs:{},logging:!(String.prototype.escapeJSON=function(){return this.replace(/[\\]/g,"\\\\").replace(/[\"]/g,'\\"').replace(/[\/]/g,"\\/").replace(/[\b]/g,"\\b").replace(/[\f]/g,"\\f").replace(/[\n]/g,"\\n").replace(/[\r]/g,"\\r").replace(/[\t]/g,"\\t")}),vname:function(e){return""!=e&&!e.match(/[\W]/g)},dupname:function(t){var i=!1;return this.ll.forEach(function(e){t==e.name&&(i=!0)}),i},fsinfo:function(e,t){Q("#fssize").innerHTML=e.format(0,3,","),Q("#fsused").innerHTML=t.format(0,3,","),Q("#fsfree").innerHTML=(e-t).format(0,3,",")},stoplog:function(){if(this.logging&&confirm("Stop current logging?")){var e=Q("#logname").value.trim();s_ajax({url:this.stopurl+e,m:"GET",success:function(e){location.reload()},fail:function(e){alert("Failed to stop for:"+e)}})}},startlog:function(){var e=this;if(!e.logging){if(10<=e.ll.length)return void alert("Too many logs. Delete some before creating new.");if(e.fs.size-e.fs.used<=2*e.fs.block)return void alert("Not enough free space!");var t=Q("#logname").value.trim();if(!1===e.vname(t))return void alert("Invalid file name, no special characters allowed.");if(e.dupname(t))return void alert("Duplicated name.");var i="";if(Q("#calispindel").checked){var r=parseFloat(Q("#tiltinw").value.trim()),o=parseFloat(Q("#hydrometer").value.trim());if(window.plato&&(o=0),isNaN(r))alert("tilt value is necessary!");else if(!window.plato&&(isNaN(r)||isNaN(o)))return void alert("tilt value and hydrometer reading is necessary!");i="&tw="+r+"&hr="+o}confirm("Start new logging?")&&s_ajax({url:e.starturl+t+i,m:"GET",success:function(e){location.reload()},fail:function(e){alert("Failed to start for:"+e)}})}},recording:function(e,t){this.logging=!0;var i=new Date(1e3*t);Q("#start-log-date").innerHTML=i.toLocaleString(),Q("#loggingtitle").innerHTML=e,Q("#logstartinput").style.display="none",Q("#logstopinput").style.display="block"},stop:function(){this.logging=!1,Q("#logstartinput").style.display="block",Q("#logstopinput").style.display="none"},rm:function(i){var r=this;confirm("Delete the log "+r.ll[i].name)&&(console.log("rm "+r.ll[i].name),s_ajax({url:r.rmurl+i,m:"GET",success:function(e){var t=JSON.parse(e);r.fs=t,r.fsinfo(t.size,t.used),r.ll.splice(i,1),r.list(r.ll)},fail:function(e){alert("Failed to delete for:"+e)}}))},dl:function(e){window.open(this.dlurl+e)},list:function(e){for(var t,n=Q("#loglist").querySelector("tbody");t=n.querySelector("tr:nth-of-type(2)");)n.removeChild(t);var a=this,l=a.row;e.forEach(function(e,t){var i=e.name,r=new Date(1e3*e.time),o=l.cloneNode(!0);o.querySelector(".logid").innerHTML=i,o.querySelector(".logdate").innerHTML=r.toLocaleString(),o.querySelector(".dlbutton").onclick=function(){a.dl(t)},o.querySelector(".rmbutton").onclick=function(){a.rm(t)},n.appendChild(o)})},init:function(){var o=this;Q("#startlogbutton").onclick=function(){o.startlog()},Q("#stoplogbutton").onclick=function(){o.stoplog()},o.row=Q("#loglist").querySelector("tr:nth-of-type(2)"),o.row.parentNode.removeChild(o.row),s_ajax({url:o.url,m:"GET",success:function(e){var t=JSON.parse(e);if(o.fs=t.fs,t.rec&&o.recording(t.log,t.start),o.ll=t.list,o.list(t.list),o.fsinfo(t.fs.size,t.fs.used),void 0!==t.plato&&t.plato){window.plato=!0;for(var i=document.querySelectorAll(".tiltwatercorrect"),r=0;r<i.length;r++)i[r].style.display="none"}else window.plato=!1},fail:function(e){alert("failed:"+e)}})}};function checkurl(e){e.value.trim().startsWith("https")&&alert("HTTPS is not supported")}function checkformat(e){256<e.value.length&&(e.value=t.value.substring(0,256)),Q("#fmthint").innerHTML=e.value.length+"/256"}function cmethod(e){for(var t=document.querySelectorAll('input[name$="method"]'),i=0;i<t.length;i++)t[i].id!=e.id&&(t[i].checked=!1);window.selectedMethod=e.value}function generichttp_get(){if(void 0===window.selectedMethod)return alert("select Method!"),null;var e=Q("#format").value.trim();if("GET"==window.selectedMethod&&new RegExp("s","g").exec(e))return alert("space is not allowed"),null;var t={};return t.url=Q("#url").value.trim(),t.format=encodeURIComponent(e.escapeJSON()),t.method=Q("#m_post").checked?"POST":"GET",t.type=Q("#data-type").value.trim(),t.service=0,t}function generichttp_set(e){serviceOption(Q("#service-type").value="generichttp"),window.selectedMethod=e.method,Q("#m_"+e.method.toLowerCase()).checked=!0,Q("#url").value=void 0===e.url?"":e.url,Q("#data-type").value=void 0===e.type?"":e.type,Q("#format").value=void 0===e.format?"":e.format,checkformat(Q("#format"))}function ubidots_set(e){serviceOption(Q("#service-type").value="ubidots");var t=/http:\/\/([\w\.]+)\.ubidots\.com\/api\/v1\.6\/devices\/(\w+)\/\?token=(\w+)$/.exec(e.url);Q("select[name=ubidots-account]").value="things"==t[1]?1:2,Q("#ubidots-device").value=t[2],Q("#ubidots-token").value=t[3]}function ubidots_get(){var e=Q("#ubidots-device").value.trim();if(!e)return null;var t=Q("#ubidots-token").value.trim();if(!t)return null;var i={};return i.url=1==Q("select[name=ubidots-account]").value?"http://things.ubidots.com/api/v1.6/devices/"+e+"/?token="+t:"http://industrial.api.ubidots.com/v1.6/devices/"+e+"/?token="+t,i.format=encodeURIComponent("{}".escapeJSON()),i.method="POST",i.type="application/json",i.service=1,i}function thingspeak_set(e){serviceOption(Q("#service-type").value="thingspeak");for(var t={},i=e.format.split("&"),r=0;r<i.length;r++){var o=i[r].split("=");t[o[0]]=o[1]}Q("#thingspeak-apikey").value=t.api_key;for(r=1;r<9;r++)Q("select[name=thingspeak-f"+r+"]").value=void 0===t["field"+r]?"unused":t["field"+r].substring(1)}function thingspeak_get(){var e=Q("#thingspeak-apikey").value.trim();if(!e)return null;for(var t=e="api_key="+e,i=1;i<9;i++){var r=Q("select[name=thingspeak-f"+i+"]").value;"unused"!=r&&(t=t+"&field"+i+"=%"+r)}if(t==e)return null;var o={url:"http://api.thingspeak.com/update"};return o.format=encodeURIComponent(t.escapeJSON()),o.method="POST",o.type="application/x-www-form-urlencoded",o.service=0,o}function brewfather_set(e){serviceOption(Q("#service-type").value="brewfather");var t=/http:\/\/log\.brewfather\.net\/brewpiless\?id=(\w+)$/.exec(e.url);Q("#brewfather-id").value=t[1];var i=/"id":"([^"]+)"/.exec(e.format);Q("#brewfather-device").value=i[1]}function brewfather_get(e){var t=Q("#brewfather-id").value.trim(),i=Q("#brewfather-device").value.trim();if(!t||!i)return null;var r={};r.url="http://log.brewfather.net/brewpiless?id="+t;var o='{"id":"'+i+'","beerTemp":%b,"beerSet":%B,"fridgeTemp":%f,"fridgeSet":%F,"roomTemp":%r,"gravity":%g,"tiltValue":%t,"auxTemp":%a,"extVolt":%v,"timestamp":%u}';return r.format=encodeURIComponent(o.escapeJSON()),r.method="POST",r.type="application/json",r.service=0,r}function service_set(e){1==e.service?ubidots_set(e):/http:\/\/api\.thingspeak\.com\//.exec(e.url)?thingspeak_set(e):/http:\/\/log\.brewfather\.net\//.exec(e.url)?brewfather_set(e):generichttp_set(e)}function update(){var e,t=Q("#service-type").value,i=Q("#enabled").checked;"generichttp"==t?e=generichttp_get():"ubidots"==t?e=ubidots_get():"thingspeak"==t?e=thingspeak_get():"brewfather"==t&&(e=brewfather_get()),i&&!e||(e||(e={url:"",format:"",method:"POST",type:"",service:0}),e.enabled=i,e.period=Q("#period").value,s_ajax({url:logurl,m:"POST",data:"data="+JSON.stringify(e),success:function(e){alert("Done")},fail:function(e){alert("failed:"+e)}}))}function remote_init(e){var t={generichttp:1,thingspeak:15,brewfather:900,ubidots:1};Q("#period").onchange=function(){var e=t[Q("#service-type").value];Q("#period").value<e&&(Q("#period").value=e)},serviceOption("generichttp"),s_ajax({url:logurl+"?data=1",m:"GET",success:function(e){var t=JSON.parse(e);void 0!==t.enabled&&(Q("#enabled").checked=t.enabled,Q("#period").value=void 0===t.period?300:t.period,service_set(t))}})}function showformat(e){var t=Q("#formatlist"),i=e.getBoundingClientRect();t.style.display="block",t.style.left=i.right+5+"px",t.style.top=i.bottom+5+"px"}function hideformat(){Q("#formatlist").style.display="none"}function serviceOption(e){for(var t=document.querySelectorAll("#service-opt > div"),i=0;i<t.length;i++){var r=t[i];r.id==e?r.style.display="block":r.style.display="none"}Q("#period").onchange()}function serviceChange(){serviceOption(Q("#service-type").value)}function init(e){function t(){var e=parseFloat(Q("#watertemp").value),t=parseFloat(Q("#caltemp").value),i=Q("#tempunit").value;if(!isNaN(e)&&!isNaN(t)){"C"==i&&(t=C2F(t),e=C2F(e));var r=BrewMath.tempCorrectionF(1,t,e);Q("#hydrometer").value=r.toFixed(3)}}void 0===e&&(e=!1),e||(getActiveNavItem(),Q("#verinfo").innerHTML="v"+JSVERSION),Q("#watertemp").onchange=t,Q("#caltemp").onchange=t,Q("#tempunit").onchange=t,remote_init(e),logs.init()}</script><style>#loglist,#loglist td,#loglist th,#loglist tr{border:1px solid #000}fieldset{margin:10px}#fsinfo{margin:10px}#formatlist{display:none;position:absolute;border:1px solid #fff;background:#d3d3d3}#formatlist table,#formatlist td,#formatlist th{border:1px solid #000;border-collapse:collapse}ul.inputlist{list-style-type:none}ul.inputlist li{display:table-row}ul.inputlist .itemtitle{display:table-cell;font-weight:700}ul.inputlist .iteminput{display:table-cell}.listgrid{margin:4px}</style></head><body onload=init(!0)><fieldset><legend> Remote Log </legend><form><ul class=inputlist><li><span class=itemtitle>Enabled:</span><span class=itemvalue><input type=checkbox id=enabled value=yes></span></li><li><span class=itemtitle>Log time period:</span><span class=itemvalue><input type=text id=period size=4> Seconds </span></li><li><span class=itemtitle>Service Type:</span><span class=itemvalue><select id=service-type name=service onchange=serviceChange()><option value=generichttp> Generic HTTP </option><option value=thingspeak>thingspeak.com</option><option value=ubidots>ubidots.com</option><option value=brewfather>Brewfather</option></select></span></li></ul><div id=service-opt><div id=thingspeak><ul class=inputlist><li><span class=itemtitle>Write API Key:</span><span class=itemvalue><input type=text id=thingspeak-apikey size=42></span></li><li><span class=itemtitle>Fields:</span><span class=itemvalue><span class=listgrid><label for=thingspeak-f1>Field 1:</label> <select name=thingspeak-f1><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select> </span><span class=listgrid><label for=thingspeak-f2>Field 2:</label> <select name=thingspeak-f2><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select> </span><span class=listgrid><label for=thingspeak-f3>Field 3:</label> <select name=thingspeak-f3><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select></span><br><span class=listgrid><label for=thingspeak-f4>Field 4:</label> <select name=thingspeak-f4><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select> </span><span class=listgrid><label for=thingspeak-f5>Field 5:</label> <select name=thingspeak-f5><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select> </span><span class=listgrid><label for=thingspeak-f6>Field 6:</label> <select name=thingspeak-f6><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select></span><br><span class=listgrid><label for=thingspeak-f7>Field 7:</label> <select name=thingspeak-f7><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select> </span><span class=listgrid><label for=thingspeak-f8>Field 8:</label> <select name=thingspeak-f8><option value=unused>Unused</option><option value=b> Beer Temperature </option><option value=B> Beer Setting </option><option value=f> Fridge Temperature </option><option value=F> Fridge Setting </option><option value=r> Room Temperature </option><option value=g> Gravity </option><option value=p> Plato </option><option value=a> iSpindel Temperature </option><option value=v> iSpindel voltage </option><option value=t> Tilt value </option></select></span></span></li></ul></div><div id=brewfather><ul class=inputlist><li><span class=itemtitle>ID:</span><span class=itemvalue><input type=text id=brewfather-id size=42></span></li><li><span class=itemtitle>Device Label:</span><span class=itemvalue><input type=text id=brewfather-device size=42></span></li></ul></div><div id=ubidots><ul class=inputlist><li><span class=itemtitle>Account:</span><span class=itemvalue><select name=ubidots-account class=nb><option value=1>Educational</option><option value=2>Industrial></option></select></span></li><li><span class=itemtitle>Token:</span><span class=itemvalue><input type=text id=ubidots-token size=42></span></li><li><span class=itemtitle>Device:</span><span class=itemvalue><input type=text id=ubidots-device size=42></span></li></ul></div><div id=generichttp><ul class=inputlist><li><span class=itemtitle>Method:</span><span class=itemvalue><input type=checkbox id=m_get name=method value=GET onchange=cmethod(this)>Get <input type=checkbox id=m_post name=method value=POST onchange=cmethod(this)>Post <input type=checkbox id=m_put name=method value=PUT onchange=cmethod(this)>Put</span></li><li><span class=itemtitle>URL:</span><span class=itemvalue><input type=text id=url size=128 placeholder="input link " onchange=checkurl(this)></span></li><li><span class=itemtitle>DataType:</span> <span class=itemvalue><input type=text id=data-type size=42 placeholder=Content-Type></span></li><li><span class=itemtitle></span> <span class=itemvalue onmouseover=showformat(this) onmouseout=hideformat()><u>Notations...</u></span></li><li><span class=itemtitle>Format:</span><span class=itemvalue><textarea id=format rows=4 cols=64 oninput=checkformat(this)></textarea></span></li><li><span class=itemtitle></span> <span class=itemvalue>Characters:<span id=fmthint></span></span></li></ul></div></div><br><button type=button onclick=update()>Update</button></form></fieldset><fieldset><legend> Local Log </legend><div id=logctrl style=border-style:outset;padding:16px><div id=logstartinput><span id=logtitle>New Log Name:</span><input type=text id=logname size=24 maxlength=24> <button id=startlogbutton>Start Logging</button><div style=margin-left:16px><strong> Options:</strong><br> Calibrate iSpindel <input type=checkbox id=calispindel><br> Tilt value in water <input type=text id=tiltinw size=6> <span class=tiltwatercorrect> Hydrometer reading: <input type=text id=hydrometer size=6> , or water @ <input type=text id=watertemp size=4>&deg; calibrated <input type=text id=caltemp size=4>&deg; <select id=tempunit><option vlue=C>C</option><option value=F>F</option></select></span></div></div><div id=logstopinput style=display:none><strong id=loggingtitle></strong> since <strong id=start-log-date></strong> <button id=stoplogbutton>Stop Logging</button></div></div><div id=fsinfo> Free Space: <span id=fsfree>0</span> Bytes, Used Space: <span id=fsused>0</span> Bytes, Total Space: <span id=fssize>0</span> Bytes</div><table id=loglist><tr><th style=width:30%> Log </th><th style=width:40%> Date </th><th> Action </th></tr><tr><td class=logid></td><td class=logdate></td><td><button class=dlbutton>Download</button><button class=rmbutton>Delete</button></td></tr></table></fieldset><div id=formatlist><table><tr><th>%b</th><td> Beer Temperature </td></tr><tr><th>%B</th><td> Beer Setting </td></tr><tr><th>%f</th><td> Fridge Temperature </td></tr><tr><th>%F</th><td> Fridge Setting </td></tr><tr><th>%r</th><td> Room Temperature </td></tr><tr><th>%g</th><td> Gravity </td></tr><tr><th>%p</th><td> Plato </td></tr><tr><th>%a</th><td> iSpindel Temperature </td></tr><tr><th>%v</th><td> iSpindel voltage </td></tr><tr><th>%t</th><td> Tilt value </td></tr><tr><th>%u</th><td> Unix timestamp of last gravity update </td></tr></table></div></body></html>